{"ast":null,"code":"import { DatePipe } from '@angular/common';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"../service/customer.service\";\nimport * as i2 from \"@angular/common\";\nimport * as i3 from \"@angular/material/button\";\nimport * as i4 from \"@angular/material/toolbar\";\nimport * as i5 from \"@angular/material/input\";\nimport * as i6 from \"@angular/material/form-field\";\nimport * as i7 from \"@angular/forms\";\nfunction CustomerComponent_div_35_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 11);\n    i0.ɵɵtext(1, \" Usu\\u00E1rio salvo com sucesso! \");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction CustomerComponent_div_36_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 11);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const error_r2 = ctx.$implicit;\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" \", error_r2, \" \");\n  }\n}\nexport class CustomerComponent {\n  constructor(service) {\n    this.service = service;\n    this.success = false;\n    this.customer = {\n      idCustomer: '',\n      firstNameCustomer: '',\n      lastNameCustomer: '',\n      birthdateCustomer: '',\n      dateCreatedCustomer: '',\n      monthlyIncomeCustomer: '',\n      cpfCustomer: '',\n      emailCustomer: '',\n      passwordCustomer: '',\n      statusCustomer: true\n    };\n  }\n  ngOnInit() {}\n  saveCustomer() {\n    const datePipe = new DatePipe('en-US');\n    this.customer.birthdateCustomer = datePipe.transform(this.customer.birthdateCustomer, 'dd/MM/yyyy');\n    this.service.save(this.customer).subscribe({\n      next: response => {\n        this.success = true;\n        this.errors = [];\n        //this.toast.success('O cliente '+ this.customer.firstNameCustomer +' '+ this.customer.lastNameCustomer +' foi cadastrado com sucesso!', 'Sucesso!!!');      \n      },\n      error: ex => {\n        if (ex.error.errors) {\n          this.errors = ex.error.errors;\n          this.success = false;\n          ex.error.errors.forEach(element => {\n            //this.toast.error(element.message, 'Atenção!!!');                    \n          });\n        } else {\n          this.success = false;\n          this.errors = ex.error.errors;\n          //this.toast.error(ex.error.message, 'Atenção!');\n        }\n      }\n    });\n  }\n}\n\nCustomerComponent.ɵfac = function CustomerComponent_Factory(t) {\n  return new (t || CustomerComponent)(i0.ɵɵdirectiveInject(i1.CustomerService));\n};\nCustomerComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: CustomerComponent,\n  selectors: [[\"app-customer\"]],\n  decls: 37,\n  vars: 9,\n  consts: [[1, \"full-width\"], [\"type\", \"text\", \"matInput\", \"\", \"name\", \"firstNameCustomer\", \"placeholder\", \"Digite seu primeiro nome\", \"required\", \"\", 3, \"ngModel\", \"ngModelChange\"], [\"type\", \"text\", \"matInput\", \"\", \"name\", \"lastNameCustomer\", \"placeholder\", \"Digite seu \\u00FAltimo nome\", \"required\", \"\", 3, \"ngModel\", \"ngModelChange\"], [\"type\", \"text\", \"matInput\", \"\", \"name\", \"cpfCustomer\", \"placeholder\", \"Digite seu CPF\", \"required\", \"\", 3, \"ngModel\", \"ngModelChange\"], [\"type\", \"date\", \"matInput\", \"\", \"name\", \"birthdateCustomer\", \"placeholder\", \"Digite sua data de nascimento\", \"required\", \"\", 3, \"ngModel\", \"ngModelChange\"], [\"type\", \"number\", \"matInput\", \"\", \"name\", \"monthlyIncomeCustomer\", \"placeholder\", \"Digite sua renda mensal (R$)\", \"required\", \"\", 3, \"ngModel\", \"ngModelChange\"], [\"type\", \"email\", \"matInput\", \"\", \"name\", \"emailCustomer\", \"placeholder\", \"Digite seu email\", \"required\", \"\", 3, \"ngModel\", \"ngModelChange\"], [\"type\", \"password\", \"matInput\", \"\", \"name\", \"passwordCustomer\", \"placeholder\", \"Digite sua senha\", \"required\", \"\", 3, \"ngModel\", \"ngModelChange\"], [\"mat-raised-button\", \"\", \"color\", \"primary\", 3, \"click\"], [\"role\", \"alert\", 4, \"ngIf\"], [\"role\", \"alert\", 4, \"ngFor\", \"ngForOf\"], [\"role\", \"alert\"]],\n  template: function CustomerComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"mat-toolbar\")(1, \"span\");\n      i0.ɵɵtext(2, \" Clientes \");\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(3, \"form\")(4, \"mat-form-field\", 0)(5, \"mat-label\");\n      i0.ɵɵtext(6, \"Primeiro Nome: \");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(7, \"input\", 1);\n      i0.ɵɵlistener(\"ngModelChange\", function CustomerComponent_Template_input_ngModelChange_7_listener($event) {\n        return ctx.customer.firstNameCustomer = $event;\n      });\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(8, \"mat-form-field\", 0)(9, \"mat-label\");\n      i0.ɵɵtext(10, \"\\u00DAltimo Nome: \");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(11, \"input\", 2);\n      i0.ɵɵlistener(\"ngModelChange\", function CustomerComponent_Template_input_ngModelChange_11_listener($event) {\n        return ctx.customer.lastNameCustomer = $event;\n      });\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(12, \"mat-form-field\", 0)(13, \"mat-label\");\n      i0.ɵɵtext(14, \"CPF: \");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(15, \"input\", 3);\n      i0.ɵɵlistener(\"ngModelChange\", function CustomerComponent_Template_input_ngModelChange_15_listener($event) {\n        return ctx.customer.cpfCustomer = $event;\n      });\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(16, \"mat-form-field\", 0)(17, \"mat-label\");\n      i0.ɵɵtext(18, \"Data de Nascimento: \");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(19, \"input\", 4);\n      i0.ɵɵlistener(\"ngModelChange\", function CustomerComponent_Template_input_ngModelChange_19_listener($event) {\n        return ctx.customer.birthdateCustomer = $event;\n      });\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(20, \"mat-form-field\", 0)(21, \"mat-label\");\n      i0.ɵɵtext(22, \"Renda Mensal: R$ \");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(23, \"input\", 5);\n      i0.ɵɵlistener(\"ngModelChange\", function CustomerComponent_Template_input_ngModelChange_23_listener($event) {\n        return ctx.customer.monthlyIncomeCustomer = $event;\n      });\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(24, \"mat-form-field\", 0)(25, \"mat-label\");\n      i0.ɵɵtext(26, \"Email: \");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(27, \"input\", 6);\n      i0.ɵɵlistener(\"ngModelChange\", function CustomerComponent_Template_input_ngModelChange_27_listener($event) {\n        return ctx.customer.emailCustomer = $event;\n      });\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(28, \"mat-form-field\", 0)(29, \"mat-label\");\n      i0.ɵɵtext(30, \"Senha: \");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(31, \"input\", 7);\n      i0.ɵɵlistener(\"ngModelChange\", function CustomerComponent_Template_input_ngModelChange_31_listener($event) {\n        return ctx.customer.passwordCustomer = $event;\n      });\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(32, \"button\", 8);\n      i0.ɵɵlistener(\"click\", function CustomerComponent_Template_button_click_32_listener() {\n        return ctx.saveCustomer();\n      });\n      i0.ɵɵtext(33, \"Salvar\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(34, \"br\");\n      i0.ɵɵtemplate(35, CustomerComponent_div_35_Template, 2, 0, \"div\", 9);\n      i0.ɵɵtemplate(36, CustomerComponent_div_36_Template, 2, 1, \"div\", 10);\n      i0.ɵɵelementEnd();\n    }\n    if (rf & 2) {\n      i0.ɵɵadvance(7);\n      i0.ɵɵproperty(\"ngModel\", ctx.customer.firstNameCustomer);\n      i0.ɵɵadvance(4);\n      i0.ɵɵproperty(\"ngModel\", ctx.customer.lastNameCustomer);\n      i0.ɵɵadvance(4);\n      i0.ɵɵproperty(\"ngModel\", ctx.customer.cpfCustomer);\n      i0.ɵɵadvance(4);\n      i0.ɵɵproperty(\"ngModel\", ctx.customer.birthdateCustomer);\n      i0.ɵɵadvance(4);\n      i0.ɵɵproperty(\"ngModel\", ctx.customer.monthlyIncomeCustomer);\n      i0.ɵɵadvance(4);\n      i0.ɵɵproperty(\"ngModel\", ctx.customer.emailCustomer);\n      i0.ɵɵadvance(4);\n      i0.ɵɵproperty(\"ngModel\", ctx.customer.passwordCustomer);\n      i0.ɵɵadvance(4);\n      i0.ɵɵproperty(\"ngIf\", ctx.success == true);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngForOf\", ctx.errors);\n    }\n  },\n  dependencies: [i2.NgForOf, i2.NgIf, i3.MatButton, i4.MatToolbar, i5.MatInput, i6.MatFormField, i6.MatLabel, i7.ɵNgNoValidate, i7.DefaultValueAccessor, i7.NumberValueAccessor, i7.NgControlStatus, i7.NgControlStatusGroup, i7.RequiredValidator, i7.NgModel, i7.NgForm],\n  styles: [\".full-width[_ngcontent-%COMP%] {\\n    width: 100%;\\n}\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8uL3NyYy9hcHAvY3VzdG9tZXIvY3VzdG9tZXIuY29tcG9uZW50LmNzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtJQUNJLFdBQVc7QUFDZiIsInNvdXJjZXNDb250ZW50IjpbIi5mdWxsLXdpZHRoIHtcbiAgICB3aWR0aDogMTAwJTtcbn0iXSwic291cmNlUm9vdCI6IiJ9 */\"]\n});","map":{"version":3,"mappings":"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","names":["DatePipe","i0","CustomerComponent","constructor","service","idCustomer","firstNameCustomer","lastNameCustomer","birthdateCustomer","dateCreatedCustomer","monthlyIncomeCustomer","cpfCustomer","emailCustomer","passwordCustomer","statusCustomer","ngOnInit","saveCustomer","datePipe","customer","transform","save","subscribe","next","response","success","errors","error","ex","forEach","element","selectors","decls","vars","consts","template","ctx"],"sourceRoot":"","sources":["/Users/tiago/AngularProjects/front-app-with-angular/src/app/customer/customer.component.ts","/Users/tiago/AngularProjects/front-app-with-angular/src/app/customer/customer.component.html"],"sourcesContent":["import { Component } from '@angular/core';\nimport { CustomerService } from '../service/customer.service';\nimport { Customer } from '../model/customer';\nimport { DatePipe } from '@angular/common';\nimport { ToastrService } from 'ngx-toastr';\n\n@Component({\n  selector: 'app-customer',\n  templateUrl: './customer.component.html',\n  styleUrls: ['./customer.component.css']\n})\nexport class CustomerComponent {\n\n  success: boolean = false;\n  errors!: String[];\n\n  constructor(private service: CustomerService){\n  }\n\n  ngOnInit(): void {\n    \n  }\n\n  customer: Customer = {\n    idCustomer: '',\n    firstNameCustomer: '',\n    lastNameCustomer: '',\n    birthdateCustomer: '',\n    dateCreatedCustomer: '',\n    monthlyIncomeCustomer: '',\n    cpfCustomer: '',\n    emailCustomer: '',\n    passwordCustomer: '',\n    statusCustomer: true\n  }\n\n  saveCustomer() {\n    const datePipe = new DatePipe('en-US');\n    this.customer.birthdateCustomer = datePipe.transform(\n      this.customer.birthdateCustomer, 'dd/MM/yyyy');\n    \n    this.service.save(this.customer).subscribe({next: response => {\n      this.success = true;\n      this.errors = [];\n    //this.toast.success('O cliente '+ this.customer.firstNameCustomer +' '+ this.customer.lastNameCustomer +' foi cadastrado com sucesso!', 'Sucesso!!!');      \n    }, error: ex => {\n      if (ex.error.errors) {\n        this.errors = ex.error.errors;\n        this.success = false;\n        ex.error.errors.forEach((element:any) => {\n          //this.toast.error(element.message, 'Atenção!!!');                    \n        });\n      } else {\n          this.success = false;\n          this.errors = ex.error.errors;\n        //this.toast.error(ex.error.message, 'Atenção!');\n      }\n    }})\n  }\n\n}","<mat-toolbar>\n    <span>\n        Clientes\n    </span>\n</mat-toolbar>\n<form>\n    <mat-form-field class=\"full-width\">\n        <mat-label>Primeiro Nome: </mat-label>\n        <input [(ngModel)]=\"customer.firstNameCustomer\" type=\"text\" matInput name=\"firstNameCustomer\" placeholder=\"Digite seu primeiro nome\" required />\n    </mat-form-field>\n    <mat-form-field class=\"full-width\">\n        <mat-label>Último Nome: </mat-label>\n        <input [(ngModel)]=\"customer.lastNameCustomer\" type=\"text\" matInput name=\"lastNameCustomer\" placeholder=\"Digite seu último nome\" required />\n    </mat-form-field>\n    <mat-form-field class=\"full-width\">\n        <mat-label>CPF: </mat-label>\n        <input [(ngModel)]=\"customer.cpfCustomer\" type=\"text\" matInput name=\"cpfCustomer\" placeholder=\"Digite seu CPF\" required />\n    </mat-form-field>\n    <mat-form-field class=\"full-width\">\n        <mat-label>Data de Nascimento: </mat-label>\n        <input [(ngModel)]=\"customer.birthdateCustomer\" type=\"date\" matInput name=\"birthdateCustomer\" placeholder=\"Digite sua data de nascimento\" required />\n    </mat-form-field>\n    <mat-form-field class=\"full-width\">\n        <mat-label>Renda Mensal: R$ </mat-label>\n        <input [(ngModel)]=\"customer.monthlyIncomeCustomer\" type=\"number\" matInput name=\"monthlyIncomeCustomer\" placeholder=\"Digite sua renda mensal (R$)\" required />\n    </mat-form-field>\n    <mat-form-field class=\"full-width\">\n        <mat-label>Email: </mat-label>\n        <input [(ngModel)]=\"customer.emailCustomer\" type=\"email\" matInput name=\"emailCustomer\" placeholder=\"Digite seu email\" required />\n    </mat-form-field>\n    <mat-form-field class=\"full-width\">\n        <mat-label>Senha: </mat-label>\n        <input [(ngModel)]=\"customer.passwordCustomer\" type=\"password\" matInput name=\"passwordCustomer\" placeholder=\"Digite sua senha\" required />\n    </mat-form-field>\n    <button (click)=\"saveCustomer()\" mat-raised-button color=\"primary\">Salvar</button>\n    <br />\n    <div role=\"alert\" *ngIf=\"success == true\">\n        Usuário salvo com sucesso!\n    </div>\n    <div role=\"alert\" *ngFor=\"let error of errors\">\n        {{ error }}\n    </div>\n</form>"]},"metadata":{},"sourceType":"module","externalDependencies":[]}