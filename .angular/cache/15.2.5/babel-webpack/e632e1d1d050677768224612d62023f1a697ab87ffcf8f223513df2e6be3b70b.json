{"ast":null,"code":"import { DatePipe } from '@angular/common';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"../service/customer.service\";\nimport * as i2 from \"@angular/common\";\nimport * as i3 from \"@angular/material/button\";\nimport * as i4 from \"@angular/material/toolbar\";\nimport * as i5 from \"@angular/material/input\";\nimport * as i6 from \"@angular/material/form-field\";\nimport * as i7 from \"@angular/forms\";\nimport * as i8 from \"@angular/material/tabs\";\nimport * as i9 from \"@angular/material/table\";\nimport * as i10 from \"@angular/material/card\";\nfunction CustomerComponent_th_8_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"th\", 23);\n    i0.ɵɵtext(1, \" No. \");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction CustomerComponent_td_9_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"td\", 24);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const element_r12 = ctx.$implicit;\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" \", element_r12.position, \" \");\n  }\n}\nfunction CustomerComponent_th_11_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"th\", 23);\n    i0.ɵɵtext(1, \" Name \");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction CustomerComponent_td_12_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"td\", 24);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const element_r13 = ctx.$implicit;\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" \", element_r13.name, \" \");\n  }\n}\nfunction CustomerComponent_th_14_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"th\", 23);\n    i0.ɵɵtext(1, \" Weight \");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction CustomerComponent_td_15_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"td\", 24);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const element_r14 = ctx.$implicit;\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" \", element_r14.weight, \" \");\n  }\n}\nfunction CustomerComponent_th_17_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"th\", 23);\n    i0.ɵɵtext(1, \" Symbol \");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction CustomerComponent_td_18_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"td\", 24);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const element_r15 = ctx.$implicit;\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" \", element_r15.symbol, \" \");\n  }\n}\nfunction CustomerComponent_tr_19_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"tr\", 25);\n  }\n}\nfunction CustomerComponent_tr_20_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"tr\", 26);\n  }\n}\nfunction CustomerComponent_div_58_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 27)(1, \"span\");\n    i0.ɵɵtext(2);\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const ctx_r10 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate1(\"Cliente \", ctx_r10.customer.firstNameCustomer, \" cadastrado com sucesso!\");\n  }\n}\nfunction CustomerComponent_div_59_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 27)(1, \"span\");\n    i0.ɵɵtext(2);\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const error_r17 = ctx.$implicit;\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(error_r17);\n  }\n}\nexport class CustomerComponent {\n  constructor(service) {\n    this.service = service;\n    this.success = false;\n    this.customer = {\n      idCustomer: '',\n      firstNameCustomer: '',\n      lastNameCustomer: '',\n      birthdateCustomer: '',\n      dateCreatedCustomer: '',\n      monthlyIncomeCustomer: '',\n      cpfCustomer: '',\n      emailCustomer: '',\n      passwordCustomer: '',\n      statusCustomer: true\n    };\n  }\n  ngOnInit() {}\n  saveCustomer() {\n    const datePipe = new DatePipe('en-US');\n    this.customer.birthdateCustomer = datePipe.transform(this.customer.birthdateCustomer, 'dd/MM/yyyy');\n    this.service.save(this.customer).subscribe({\n      next: response => {\n        this.success = true;\n        this.errors = [];\n        //this.toast.success('O cliente '+ this.customer.firstNameCustomer +' '+ this.customer.lastNameCustomer +' foi cadastrado com sucesso!', 'Sucesso!!!');      \n      },\n      error: ex => {\n        if (ex.error.errors) {\n          this.errors = ex.error.errors;\n          this.success = false;\n          ex.error.errors.forEach(element => {\n            //this.toast.error(element.message, 'Atenção!!!');                    \n          });\n        } else {\n          this.success = false;\n          this.errors = ex.error.errors;\n          //this.toast.error(ex.error.message, 'Atenção!');\n        }\n      }\n    });\n  }\n}\n\nCustomerComponent.ɵfac = function CustomerComponent_Factory(t) {\n  return new (t || CustomerComponent)(i0.ɵɵdirectiveInject(i1.CustomerService));\n};\nCustomerComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: CustomerComponent,\n  selectors: [[\"app-customer\"]],\n  decls: 60,\n  vars: 12,\n  consts: [[\"label\", \"Lista de Clientes\"], [1, \"half-width\"], [\"mat-table\", \"\", 1, \"mat-elevation-z8\", 3, \"dataSource\"], [\"matColumnDef\", \"position\"], [\"mat-header-cell\", \"\", 4, \"matHeaderCellDef\"], [\"mat-cell\", \"\", 4, \"matCellDef\"], [\"matColumnDef\", \"name\"], [\"matColumnDef\", \"weight\"], [\"matColumnDef\", \"symbol\"], [\"mat-header-row\", \"\", 4, \"matHeaderRowDef\"], [\"mat-row\", \"\", 4, \"matRowDef\", \"matRowDefColumns\"], [\"label\", \"Cadastro de Clientes\"], [1, \"full-width\"], [\"type\", \"text\", \"matInput\", \"\", \"name\", \"firstNameCustomer\", \"placeholder\", \"Digite seu primeiro nome\", \"required\", \"\", 3, \"ngModel\", \"ngModelChange\"], [\"type\", \"text\", \"matInput\", \"\", \"name\", \"lastNameCustomer\", \"placeholder\", \"Digite seu \\u00FAltimo nome\", \"required\", \"\", 3, \"ngModel\", \"ngModelChange\"], [\"type\", \"text\", \"matInput\", \"\", \"name\", \"cpfCustomer\", \"placeholder\", \"Digite seu CPF\", \"required\", \"\", 3, \"ngModel\", \"ngModelChange\"], [\"type\", \"date\", \"matInput\", \"\", \"name\", \"birthdateCustomer\", \"placeholder\", \"Digite sua data de nascimento\", \"required\", \"\", 3, \"ngModel\", \"ngModelChange\"], [\"type\", \"number\", \"matInput\", \"\", \"name\", \"monthlyIncomeCustomer\", \"placeholder\", \"Digite sua renda mensal (R$)\", \"required\", \"\", 3, \"ngModel\", \"ngModelChange\"], [\"type\", \"email\", \"matInput\", \"\", \"name\", \"emailCustomer\", \"placeholder\", \"Digite seu email\", \"required\", \"\", 3, \"ngModel\", \"ngModelChange\"], [\"type\", \"password\", \"matInput\", \"\", \"name\", \"passwordCustomer\", \"placeholder\", \"Digite sua senha\", \"required\", \"\", 3, \"ngModel\", \"ngModelChange\"], [\"mat-raised-button\", \"\", \"color\", \"primary\", 3, \"click\"], [\"role\", \"alert\", 4, \"ngIf\"], [\"role\", \"alert\", 4, \"ngFor\", \"ngForOf\"], [\"mat-header-cell\", \"\"], [\"mat-cell\", \"\"], [\"mat-header-row\", \"\"], [\"mat-row\", \"\"], [\"role\", \"alert\"]],\n  template: function CustomerComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"mat-toolbar\")(1, \"span\");\n      i0.ɵɵtext(2, \" Clientes \");\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(3, \"mat-tab-group\")(4, \"mat-tab\", 0)(5, \"mat-card\", 1)(6, \"table\", 2);\n      i0.ɵɵelementContainerStart(7, 3);\n      i0.ɵɵtemplate(8, CustomerComponent_th_8_Template, 2, 0, \"th\", 4);\n      i0.ɵɵtemplate(9, CustomerComponent_td_9_Template, 2, 1, \"td\", 5);\n      i0.ɵɵelementContainerEnd();\n      i0.ɵɵelementContainerStart(10, 6);\n      i0.ɵɵtemplate(11, CustomerComponent_th_11_Template, 2, 0, \"th\", 4);\n      i0.ɵɵtemplate(12, CustomerComponent_td_12_Template, 2, 1, \"td\", 5);\n      i0.ɵɵelementContainerEnd();\n      i0.ɵɵelementContainerStart(13, 7);\n      i0.ɵɵtemplate(14, CustomerComponent_th_14_Template, 2, 0, \"th\", 4);\n      i0.ɵɵtemplate(15, CustomerComponent_td_15_Template, 2, 1, \"td\", 5);\n      i0.ɵɵelementContainerEnd();\n      i0.ɵɵelementContainerStart(16, 8);\n      i0.ɵɵtemplate(17, CustomerComponent_th_17_Template, 2, 0, \"th\", 4);\n      i0.ɵɵtemplate(18, CustomerComponent_td_18_Template, 2, 1, \"td\", 5);\n      i0.ɵɵelementContainerEnd();\n      i0.ɵɵtemplate(19, CustomerComponent_tr_19_Template, 1, 0, \"tr\", 9);\n      i0.ɵɵtemplate(20, CustomerComponent_tr_20_Template, 1, 0, \"tr\", 10);\n      i0.ɵɵelementEnd()()();\n      i0.ɵɵelementStart(21, \"mat-tab\", 11)(22, \"mat-card\", 1)(23, \"mat-card-title\");\n      i0.ɵɵtext(24, \"Cadastro\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(25, \"form\")(26, \"div\")(27, \"mat-form-field\", 12)(28, \"mat-label\");\n      i0.ɵɵtext(29, \"Primeiro Nome: \");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(30, \"input\", 13);\n      i0.ɵɵlistener(\"ngModelChange\", function CustomerComponent_Template_input_ngModelChange_30_listener($event) {\n        return ctx.customer.firstNameCustomer = $event;\n      });\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(31, \"mat-form-field\", 12)(32, \"mat-label\");\n      i0.ɵɵtext(33, \"\\u00DAltimo Nome: \");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(34, \"input\", 14);\n      i0.ɵɵlistener(\"ngModelChange\", function CustomerComponent_Template_input_ngModelChange_34_listener($event) {\n        return ctx.customer.lastNameCustomer = $event;\n      });\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(35, \"mat-form-field\", 12)(36, \"mat-label\");\n      i0.ɵɵtext(37, \"CPF: \");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(38, \"input\", 15);\n      i0.ɵɵlistener(\"ngModelChange\", function CustomerComponent_Template_input_ngModelChange_38_listener($event) {\n        return ctx.customer.cpfCustomer = $event;\n      });\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(39, \"mat-form-field\", 12)(40, \"mat-label\");\n      i0.ɵɵtext(41, \"Data de Nascimento: \");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(42, \"input\", 16);\n      i0.ɵɵlistener(\"ngModelChange\", function CustomerComponent_Template_input_ngModelChange_42_listener($event) {\n        return ctx.customer.birthdateCustomer = $event;\n      });\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(43, \"mat-form-field\", 12)(44, \"mat-label\");\n      i0.ɵɵtext(45, \"Renda Mensal: R$ \");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(46, \"input\", 17);\n      i0.ɵɵlistener(\"ngModelChange\", function CustomerComponent_Template_input_ngModelChange_46_listener($event) {\n        return ctx.customer.monthlyIncomeCustomer = $event;\n      });\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(47, \"mat-form-field\", 12)(48, \"mat-label\");\n      i0.ɵɵtext(49, \"Email: \");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(50, \"input\", 18);\n      i0.ɵɵlistener(\"ngModelChange\", function CustomerComponent_Template_input_ngModelChange_50_listener($event) {\n        return ctx.customer.emailCustomer = $event;\n      });\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(51, \"mat-form-field\", 12)(52, \"mat-label\");\n      i0.ɵɵtext(53, \"Senha: \");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(54, \"input\", 19);\n      i0.ɵɵlistener(\"ngModelChange\", function CustomerComponent_Template_input_ngModelChange_54_listener($event) {\n        return ctx.customer.passwordCustomer = $event;\n      });\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(55, \"button\", 20);\n      i0.ɵɵlistener(\"click\", function CustomerComponent_Template_button_click_55_listener() {\n        return ctx.saveCustomer();\n      });\n      i0.ɵɵtext(56, \"Salvar\");\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelement(57, \"br\");\n      i0.ɵɵtemplate(58, CustomerComponent_div_58_Template, 3, 1, \"div\", 21);\n      i0.ɵɵtemplate(59, CustomerComponent_div_59_Template, 3, 1, \"div\", 22);\n      i0.ɵɵelementEnd()()()();\n    }\n    if (rf & 2) {\n      i0.ɵɵadvance(6);\n      i0.ɵɵproperty(\"dataSource\", ctx.dataSource);\n      i0.ɵɵadvance(13);\n      i0.ɵɵproperty(\"matHeaderRowDef\", ctx.displayedColumns);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"matRowDefColumns\", ctx.displayedColumns);\n      i0.ɵɵadvance(10);\n      i0.ɵɵproperty(\"ngModel\", ctx.customer.firstNameCustomer);\n      i0.ɵɵadvance(4);\n      i0.ɵɵproperty(\"ngModel\", ctx.customer.lastNameCustomer);\n      i0.ɵɵadvance(4);\n      i0.ɵɵproperty(\"ngModel\", ctx.customer.cpfCustomer);\n      i0.ɵɵadvance(4);\n      i0.ɵɵproperty(\"ngModel\", ctx.customer.birthdateCustomer);\n      i0.ɵɵadvance(4);\n      i0.ɵɵproperty(\"ngModel\", ctx.customer.monthlyIncomeCustomer);\n      i0.ɵɵadvance(4);\n      i0.ɵɵproperty(\"ngModel\", ctx.customer.emailCustomer);\n      i0.ɵɵadvance(4);\n      i0.ɵɵproperty(\"ngModel\", ctx.customer.passwordCustomer);\n      i0.ɵɵadvance(4);\n      i0.ɵɵproperty(\"ngIf\", ctx.success == true);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngForOf\", ctx.errors);\n    }\n  },\n  dependencies: [i2.NgForOf, i2.NgIf, i3.MatButton, i4.MatToolbar, i5.MatInput, i6.MatFormField, i6.MatLabel, i7.ɵNgNoValidate, i7.DefaultValueAccessor, i7.NumberValueAccessor, i7.NgControlStatus, i7.NgControlStatusGroup, i7.RequiredValidator, i7.NgModel, i7.NgForm, i8.MatTab, i8.MatTabGroup, i9.MatTable, i9.MatHeaderCellDef, i9.MatHeaderRowDef, i9.MatColumnDef, i9.MatCellDef, i9.MatRowDef, i9.MatHeaderCell, i9.MatCell, i9.MatHeaderRow, i9.MatRow, i10.MatCard, i10.MatCardTitle],\n  styles: [\".full-width[_ngcontent-%COMP%] {\\n    width: 100%;\\n}\\n\\n.half-width[_ngcontent-%COMP%] {\\n    width: 50%;\\n}\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8uL3NyYy9hcHAvY3VzdG9tZXIvY3VzdG9tZXIuY29tcG9uZW50LmNzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtJQUNJLFdBQVc7QUFDZjs7QUFFQTtJQUNJLFVBQVU7QUFDZCIsInNvdXJjZXNDb250ZW50IjpbIi5mdWxsLXdpZHRoIHtcbiAgICB3aWR0aDogMTAwJTtcbn1cblxuLmhhbGYtd2lkdGgge1xuICAgIHdpZHRoOiA1MCU7XG59Il0sInNvdXJjZVJvb3QiOiIifQ== */\"]\n});","map":{"version":3,"mappings":"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","names":["DatePipe","i0","CustomerComponent","constructor","service","idCustomer","firstNameCustomer","lastNameCustomer","birthdateCustomer","dateCreatedCustomer","monthlyIncomeCustomer","cpfCustomer","emailCustomer","passwordCustomer","statusCustomer","ngOnInit","saveCustomer","datePipe","customer","transform","save","subscribe","next","response","success","errors","error","ex","forEach","element","selectors","decls","vars","consts","template","ctx"],"sourceRoot":"","sources":["/Users/tiago/AngularProjects/front-app-with-angular/src/app/customer/customer.component.ts","/Users/tiago/AngularProjects/front-app-with-angular/src/app/customer/customer.component.html"],"sourcesContent":["import { Component } from '@angular/core';\nimport { CustomerService } from '../service/customer.service';\nimport { Customer } from '../model/customer';\nimport { DatePipe } from '@angular/common';\nimport { ToastrService } from 'ngx-toastr';\n\n@Component({\n  selector: 'app-customer',\n  templateUrl: './customer.component.html',\n  styleUrls: ['./customer.component.css']\n})\nexport class CustomerComponent {\n\n  success: boolean = false;\n  errors!: String[];\n\n  constructor(private service: CustomerService){\n  }\n\n  ngOnInit(): void {\n    \n  }\n\n  customer: Customer = {\n    idCustomer: '',\n    firstNameCustomer: '',\n    lastNameCustomer: '',\n    birthdateCustomer: '',\n    dateCreatedCustomer: '',\n    monthlyIncomeCustomer: '',\n    cpfCustomer: '',\n    emailCustomer: '',\n    passwordCustomer: '',\n    statusCustomer: true\n  }\n\n  saveCustomer() {\n    const datePipe = new DatePipe('en-US');\n    this.customer.birthdateCustomer = datePipe.transform(\n      this.customer.birthdateCustomer, 'dd/MM/yyyy');\n    \n    this.service.save(this.customer).subscribe({next: response => {\n      this.success = true;\n      this.errors = [];\n    //this.toast.success('O cliente '+ this.customer.firstNameCustomer +' '+ this.customer.lastNameCustomer +' foi cadastrado com sucesso!', 'Sucesso!!!');      \n    }, error: ex => {\n      if (ex.error.errors) {\n        this.errors = ex.error.errors;\n        this.success = false;\n        ex.error.errors.forEach((element:any) => {\n          //this.toast.error(element.message, 'Atenção!!!');                    \n        });\n      } else {\n          this.success = false;\n          this.errors = ex.error.errors;\n        //this.toast.error(ex.error.message, 'Atenção!');\n      }\n    }})\n  }\n\n}","<mat-toolbar>\n    <span>\n        Clientes\n    </span>\n</mat-toolbar>\n\n<mat-tab-group>\n    <mat-tab label=\"Lista de Clientes\">\n        <mat-card class=\"half-width\">\n            \n            <table mat-table [dataSource]=\"dataSource\" class=\"mat-elevation-z8\">\n                \n                <ng-container matColumnDef=\"position\">\n                  <th mat-header-cell *matHeaderCellDef> No. </th>\n                  <td mat-cell *matCellDef=\"let element\"> {{element.position}} </td>\n                </ng-container>\n              \n                <ng-container matColumnDef=\"name\">\n                  <th mat-header-cell *matHeaderCellDef> Name </th>\n                  <td mat-cell *matCellDef=\"let element\"> {{element.name}} </td>\n                </ng-container>\n              \n                <ng-container matColumnDef=\"weight\">\n                  <th mat-header-cell *matHeaderCellDef> Weight </th>\n                  <td mat-cell *matCellDef=\"let element\"> {{element.weight}} </td>\n                </ng-container>\n                            \n                <ng-container matColumnDef=\"symbol\">\n                  <th mat-header-cell *matHeaderCellDef> Symbol </th>\n                  <td mat-cell *matCellDef=\"let element\"> {{element.symbol}} </td>\n                </ng-container>\n              \n                <tr mat-header-row *matHeaderRowDef=\"displayedColumns\"></tr>\n                <tr mat-row *matRowDef=\"let row; columns: displayedColumns;\"></tr>\n              </table>\n\n        </mat-card>\n    </mat-tab>\n    <mat-tab label=\"Cadastro de Clientes\">\n        <mat-card class=\"half-width\">\n            <mat-card-title>Cadastro</mat-card-title>\n            <form>\n                <div>\n                    <mat-form-field class=\"full-width\">\n                        <mat-label>Primeiro Nome: </mat-label>\n                        <input [(ngModel)]=\"customer.firstNameCustomer\" type=\"text\" matInput name=\"firstNameCustomer\"\n                            placeholder=\"Digite seu primeiro nome\" required />\n                    </mat-form-field>\n                    <mat-form-field class=\"full-width\">\n                        <mat-label>Último Nome: </mat-label>\n                        <input [(ngModel)]=\"customer.lastNameCustomer\" type=\"text\" matInput name=\"lastNameCustomer\"\n                            placeholder=\"Digite seu último nome\" required />\n                    </mat-form-field>\n                    <mat-form-field class=\"full-width\">\n                        <mat-label>CPF: </mat-label>\n                        <input [(ngModel)]=\"customer.cpfCustomer\" type=\"text\" matInput name=\"cpfCustomer\"\n                            placeholder=\"Digite seu CPF\" required />\n                    </mat-form-field>\n                    <mat-form-field class=\"full-width\">\n                        <mat-label>Data de Nascimento: </mat-label>\n                        <input [(ngModel)]=\"customer.birthdateCustomer\" type=\"date\" matInput name=\"birthdateCustomer\"\n                            placeholder=\"Digite sua data de nascimento\" required />\n                    </mat-form-field>\n                    <mat-form-field class=\"full-width\">\n                        <mat-label>Renda Mensal: R$ </mat-label>\n                        <input [(ngModel)]=\"customer.monthlyIncomeCustomer\" type=\"number\" matInput\n                            name=\"monthlyIncomeCustomer\" placeholder=\"Digite sua renda mensal (R$)\" required />\n                    </mat-form-field>\n                    <mat-form-field class=\"full-width\">\n                        <mat-label>Email: </mat-label>\n                        <input [(ngModel)]=\"customer.emailCustomer\" type=\"email\" matInput name=\"emailCustomer\"\n                            placeholder=\"Digite seu email\" required />\n                    </mat-form-field>\n                    <mat-form-field class=\"full-width\">\n                        <mat-label>Senha: </mat-label>\n                        <input [(ngModel)]=\"customer.passwordCustomer\" type=\"password\" matInput name=\"passwordCustomer\"\n                            placeholder=\"Digite sua senha\" required />\n                    </mat-form-field>\n                    <button (click)=\"saveCustomer()\" mat-raised-button color=\"primary\">Salvar</button>\n                </div>\n                <br />\n                <div role=\"alert\" *ngIf=\"success == true\">\n                    <span>Cliente {{ customer.firstNameCustomer }} cadastrado com sucesso!</span>\n                </div>\n                <div role=\"alert\" *ngFor=\"let error of errors\">\n                    <span>{{ error }}</span>\n                </div>\n            </form>\n        </mat-card>\n    </mat-tab>\n</mat-tab-group>"]},"metadata":{},"sourceType":"module","externalDependencies":[]}